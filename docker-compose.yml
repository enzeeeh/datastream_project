version: '3.5'

services:
  zookeeper:
    image: zookeeper:3.9.1
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=32181
    ports:
      - 32181:32181
    networks:
      - hai-security-network
      
  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 30001:30001
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "hai-security:1:1,classification:1:1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    networks:
      - hai-security-network

      
  spark:
    image: spark:python3
    container_name: spark
    build: ./spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - JUPYTER_ENABLE_LAB=yes
    ports:
      - "7077:7077"
      - "8080:8080"
      - "8888:8888"
    volumes:
      - ./spark:/home/jovyan/work:rw
    networks:
      - hai-security-network

  influxdb:
    image: influxdb:2.7.5-alpine
    container_name: influxdb
    ports:
      - 8086:8086
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_USER_BUCKET=${BUCKET}
      - INFLUXDB_ADMIN_USER=${ADMIN_USERNAME}
      - INFLUXDB_ADMIN_USER_PASSWORD=${ADMIN_PASSWORD}
      - INFLUXDB_ADMIN_USER_TOKEN=${AUTH_TOKEN}
    networks:
      - hai-security-network

  telegraf:
    image: telegraf:1.29.2-alpine
    container_name: telegraf
    restart: always
    ports:
      - 8125:8125
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - kafka
      - spark
      - influxdb
    links:
      - influxdb
    networks:
      - hai-security-network

  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - influxdb
    networks:
      - hai-security-network

networks:
  hai-security-network:
    driver: bridge
